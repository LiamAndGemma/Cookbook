name: Deploy to Dev

on:
  push:
    branches:
    - develop

jobs:
  firebase-deploy:

    runs-on: ubuntu-latest

    env:
      REACT_APP_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY_DEV }}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN_DEV }}
      REACT_APP_FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL_DEV }}
      REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID_DEV }}
      REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET_DEV }}
      REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID_DEV }}
      REACT_APP_FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID_DEV }}
      REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID_DEV }}

    steps:
    - name: Use Checkout
      uses: actions/checkout@master
    - name: Setup Node
      uses: actions/setup-node@master
      with:
        node-version: '10.x'
    - name: Install functions npm packages
      run: |
        yarn install
        cd functions
        yarn install
    - name:  Deploy Firebase Functions
      uses: w9jds/firebase-action@master
      with:
          args: deploy --only functions
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_DEV }}
        PROJECT_ID: default
    - name: Install project npm packages
      run: |
        yarn install
        yarn run build
    - name: Deploy Firebase Hosting, Database, Storage, Firestore
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting,database,storage,firestore
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN_DEV }}
        PROJECT_ID: default
